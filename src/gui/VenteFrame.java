/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;





import java.awt.Color;
import java.awt.print.PrinterException;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import utils.DB;

/**
 *
 * @author Yvan Fotso
 */
public class VenteFrame extends javax.swing.JFrame {



    /**
     * Creates new form VenteFrame
     */
    public VenteFrame() {
        this.clock = new Thread(){
            @Override
            public void run(){
                while (true){
                    SimpleDateFormat df = new SimpleDateFormat(("dd MM yyyy -") + ("- HH:mm:ss"));
                    DateLabel.setText(df.format(Calendar.getInstance().getTime()));
                    try{
                        sleep(500);
                    }catch (InterruptedException ie){
                    }
                }
            }
        };
     initComponents();
     RemplirTableau();
     RemplirTableauProduit();
             clock.start();
             this.setLocationRelativeTo(null);
             this.setResizable(true);
this.setTitle(" MY STORE (BOSS)✌");

             
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ProdDialog = new javax.swing.JDialog();
        QuantiteLabl = new javax.swing.JLabel();
        PdQuantite = new javax.swing.JTextField();
        PdAjouter = new javax.swing.JButton();
        PdAnnuler = new javax.swing.JButton();
        AppTab = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        VentesTab = new javax.swing.JPanel();
        ChoixProduitTabVente = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        FactureScroll = new javax.swing.JScrollPane();
        FactureTable = new javax.swing.JTable();
        TotalLabel = new javax.swing.JLabel();
        TotalField = new javax.swing.JTextField();
        FactureName = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        NpLabel = new javax.swing.JLabel();
        NpField = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        ImpressionBtn = new javax.swing.JButton();
        DateLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ProduitsTable = new javax.swing.JTable();
        SearchBtn = new javax.swing.JButton();
        SearchBar = new javax.swing.JTextField();
        ProduitsTab = new javax.swing.JPanel();
        CodeField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        EnregistrerBtn = new javax.swing.JButton();
        NouveauBtn = new javax.swing.JButton();
        SupprimerBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        DesignationField = new javax.swing.JTextField();
        QuantiteField = new javax.swing.JTextField();
        PrixUnitaireField = new javax.swing.JTextField();
        SearchBtn2 = new javax.swing.JButton();
        SearchBar2 = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        AjoutProduitTab = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        PeremField = new javax.swing.JTextField();
        CatComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        QuantiteLabl.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        QuantiteLabl.setText("QUANTITE :");
        QuantiteLabl.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        PdAjouter.setText("AJOUTER");
        PdAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PdAjouterActionPerformed(evt);
            }
        });

        PdAnnuler.setText("ANNULER");
        PdAnnuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PdAnnulerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ProdDialogLayout = new javax.swing.GroupLayout(ProdDialog.getContentPane());
        ProdDialog.getContentPane().setLayout(ProdDialogLayout);
        ProdDialogLayout.setHorizontalGroup(
            ProdDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProdDialogLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(ProdDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(QuantiteLabl, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(ProdDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ProdDialogLayout.createSequentialGroup()
                            .addComponent(PdAjouter, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PdAnnuler, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(PdQuantite, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        ProdDialogLayout.setVerticalGroup(
            ProdDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProdDialogLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(QuantiteLabl, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PdQuantite, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addGroup(ProdDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PdAjouter)
                    .addComponent(PdAnnuler))
                .addGap(36, 36, 36))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(java.awt.SystemColor.activeCaption);

        AppTab.setFont(new java.awt.Font("AR CENA", 0, 14)); // NOI18N

        VentesTab.setBackground(java.awt.SystemColor.activeCaption);

        ChoixProduitTabVente.setBackground(java.awt.SystemColor.activeCaption);

        jLabel2.setFont(new java.awt.Font("AR CENA", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("LISTE DES PRODUITS");

        javax.swing.GroupLayout ChoixProduitTabVenteLayout = new javax.swing.GroupLayout(ChoixProduitTabVente);
        ChoixProduitTabVente.setLayout(ChoixProduitTabVenteLayout);
        ChoixProduitTabVenteLayout.setHorizontalGroup(
            ChoixProduitTabVenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ChoixProduitTabVenteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ChoixProduitTabVenteLayout.setVerticalGroup(
            ChoixProduitTabVenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ChoixProduitTabVenteLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        FactureTable.setFont(new java.awt.Font("AR CENA", 0, 14)); // NOI18N
        FactureTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "code", "Designation", "Quantité", "Prix unitaire"
            }
        ));
        FactureTable.setColumnSelectionAllowed(true);
        FactureTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FactureTableMouseClicked(evt);
            }
        });
        FactureScroll.setViewportView(FactureTable);
        FactureTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        TotalLabel.setFont(new java.awt.Font("AR CENA", 0, 14)); // NOI18N
        TotalLabel.setForeground(new java.awt.Color(255, 255, 255));
        TotalLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TotalLabel.setText("TOTAL  :");

        TotalField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TotalFieldActionPerformed(evt);
            }
        });

        FactureName.setFont(new java.awt.Font("AR CENA", 0, 18)); // NOI18N
        FactureName.setForeground(new java.awt.Color(255, 255, 255));
        FactureName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        FactureName.setText("FACTURE");

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        NpLabel.setFont(new java.awt.Font("AR CENA", 0, 14)); // NOI18N
        NpLabel.setForeground(new java.awt.Color(255, 255, 255));
        NpLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        NpLabel.setText("NET A PAYER :");

        NpField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NpFieldActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("AR CENA", 0, 14)); // NOI18N
        jButton3.setText("ANNULER");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("AR CENA", 0, 14)); // NOI18N
        jButton2.setText("VALIDER");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        ImpressionBtn.setFont(new java.awt.Font("AR CENA", 0, 14)); // NOI18N
        ImpressionBtn.setText("IMPRIMER ");
        ImpressionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImpressionBtnActionPerformed(evt);
            }
        });

        DateLabel.setFont(new java.awt.Font("AR CENA", 0, 18)); // NOI18N
        DateLabel.setForeground(new java.awt.Color(255, 255, 255));
        DateLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        DateLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DateLabelMouseClicked(evt);
            }
        });

        jScrollPane2.setFont(new java.awt.Font("AR CENA", 0, 14)); // NOI18N
        jScrollPane2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane2MouseClicked(evt);
            }
        });

        ProduitsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Code", "Designation", "Quantité", "Prix Unitaire"
            }
        ));
        ProduitsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProduitsTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(ProduitsTable);

        SearchBtn.setFont(new java.awt.Font("AR CENA", 0, 14)); // NOI18N
        SearchBtn.setText("Search");
        SearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBtnActionPerformed(evt);
            }
        });

        SearchBar.setFont(new java.awt.Font("AR CENA", 0, 12)); // NOI18N
        SearchBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBarActionPerformed(evt);
            }
        });
        SearchBar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SearchBarKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout VentesTabLayout = new javax.swing.GroupLayout(VentesTab);
        VentesTab.setLayout(VentesTabLayout);
        VentesTabLayout.setHorizontalGroup(
            VentesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VentesTabLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(VentesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(VentesTabLayout.createSequentialGroup()
                        .addGroup(VentesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ChoixProduitTabVente, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(VentesTabLayout.createSequentialGroup()
                                .addComponent(SearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(SearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(VentesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(VentesTabLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(VentesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(DateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(FactureName, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, VentesTabLayout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(VentesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(VentesTabLayout.createSequentialGroup()
                                .addGroup(VentesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(NpLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TotalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(VentesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TotalField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(NpField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(52, 52, 52))
                            .addGroup(VentesTabLayout.createSequentialGroup()
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ImpressionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33))))
                    .addGroup(VentesTabLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FactureScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(13, Short.MAX_VALUE))))
        );
        VentesTabLayout.setVerticalGroup(
            VentesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VentesTabLayout.createSequentialGroup()
                .addGroup(VentesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(VentesTabLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(DateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, VentesTabLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ChoixProduitTabVente, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(VentesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(VentesTabLayout.createSequentialGroup()
                        .addComponent(FactureName, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(FactureScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(VentesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TotalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TotalField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(VentesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NpField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(NpLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(VentesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ImpressionBtn)
                            .addComponent(jButton3)
                            .addComponent(jButton2)))
                    .addGroup(VentesTabLayout.createSequentialGroup()
                        .addGroup(VentesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(VentesTab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(VentesTab, javax.swing.GroupLayout.PREFERRED_SIZE, 595, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        AppTab.addTab("VENTE", jPanel2);

        ProduitsTab.setBackground(java.awt.SystemColor.activeCaption);

        CodeField.setFont(new java.awt.Font("AR CENA", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("AR CENA", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("CODE");

        EnregistrerBtn.setFont(new java.awt.Font("AR CENA", 0, 14)); // NOI18N
        EnregistrerBtn.setText("ENREGISTRER");
        EnregistrerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnregistrerBtnActionPerformed(evt);
            }
        });

        NouveauBtn.setFont(new java.awt.Font("AR CENA", 0, 14)); // NOI18N
        NouveauBtn.setText("NOUVEAU");
        NouveauBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NouveauBtnActionPerformed(evt);
            }
        });

        SupprimerBtn.setFont(new java.awt.Font("AR CENA", 0, 14)); // NOI18N
        SupprimerBtn.setText("SUPPRIMER");
        SupprimerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SupprimerBtnActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("AR CENA", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("DESIGNATION");

        jLabel6.setFont(new java.awt.Font("AR CENA", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("QUANTITE");

        jLabel7.setFont(new java.awt.Font("AR CENA", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("P.U.");

        DesignationField.setFont(new java.awt.Font("AR CENA", 0, 14)); // NOI18N
        DesignationField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DesignationFieldActionPerformed(evt);
            }
        });

        QuantiteField.setFont(new java.awt.Font("AR CENA", 0, 14)); // NOI18N

        PrixUnitaireField.setFont(new java.awt.Font("AR CENA", 0, 14)); // NOI18N
        PrixUnitaireField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrixUnitaireFieldActionPerformed(evt);
            }
        });

        SearchBtn2.setFont(new java.awt.Font("AR CENA", 0, 14)); // NOI18N
        SearchBtn2.setText("SEARCH");
        SearchBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBtn2ActionPerformed(evt);
            }
        });
        SearchBtn2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                SearchBtn2KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SearchBtn2KeyReleased(evt);
            }
        });

        SearchBar2.setToolTipText("Type your search here");
        SearchBar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBar2ActionPerformed(evt);
            }
        });
        SearchBar2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SearchBar2KeyReleased(evt);
            }
        });

        AjoutProduitTab.setFont(new java.awt.Font("AR CENA", 0, 14)); // NOI18N
        AjoutProduitTab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Code", "Désignation", "Quantité", "Prix unitaire", "Date de péremption", "Catégorie"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        AjoutProduitTab.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                AjoutProduitTabComponentAdded(evt);
            }
        });
        AjoutProduitTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AjoutProduitTabMouseClicked(evt);
            }
        });
        AjoutProduitTab.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                AjoutProduitTabComponentShown(evt);
            }
        });
        AjoutProduitTab.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                AjoutProduitTabInputMethodTextChanged(evt);
            }
        });
        jScrollPane3.setViewportView(AjoutProduitTab);

        jLabel3.setFont(new java.awt.Font("AR CENA", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("DATE DE PEREMTION");

        PeremField.setFont(new java.awt.Font("AR CENA", 0, 14)); // NOI18N

        CatComboBox.setFont(new java.awt.Font("AR CENA", 0, 14)); // NOI18N
        CatComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CatComboBoxActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("AR CENA", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CATEGORIE");

        javax.swing.GroupLayout ProduitsTabLayout = new javax.swing.GroupLayout(ProduitsTab);
        ProduitsTab.setLayout(ProduitsTabLayout);
        ProduitsTabLayout.setHorizontalGroup(
            ProduitsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProduitsTabLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(ProduitsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ProduitsTabLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 845, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 21, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ProduitsTabLayout.createSequentialGroup()
                        .addGroup(ProduitsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(ProduitsTabLayout.createSequentialGroup()
                                .addGroup(ProduitsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(EnregistrerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ProduitsTabLayout.createSequentialGroup()
                                .addGroup(ProduitsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(ProduitsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(93, 93, 93)
                                .addGroup(ProduitsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(DesignationField, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(CodeField, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(QuantiteField, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(PrixUnitaireField, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(PeremField, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(CatComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(ProduitsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(SupprimerBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(NouveauBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(62, 62, 62))
                    .addGroup(ProduitsTabLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(SearchBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(SearchBtn2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        ProduitsTabLayout.setVerticalGroup(
            ProduitsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProduitsTabLayout.createSequentialGroup()
                .addGroup(ProduitsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ProduitsTabLayout.createSequentialGroup()
                        .addGroup(ProduitsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ProduitsTabLayout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ProduitsTabLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(CodeField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(ProduitsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DesignationField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(ProduitsTabLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(NouveauBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(ProduitsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ProduitsTabLayout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(ProduitsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PrixUnitaireField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(ProduitsTabLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ProduitsTabLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(QuantiteField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(EnregistrerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(ProduitsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PeremField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(ProduitsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ProduitsTabLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SupprimerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ProduitsTabLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(ProduitsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CatComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(ProduitsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SearchBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchBtn2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        AppTab.addTab("PRODUITS", ProduitsTab);

        jMenuBar1.setBackground(java.awt.SystemColor.activeCaption);
        jMenuBar1.setForeground(new java.awt.Color(255, 255, 255));

        jMenu1.setForeground(new java.awt.Color(255, 255, 255));
        jMenu1.setText("Fichier");

        jMenuItem1.setBackground(java.awt.SystemColor.activeCaption);
        jMenuItem1.setFont(new java.awt.Font("AR CENA", 0, 14)); // NOI18N
        jMenuItem1.setForeground(new java.awt.Color(255, 255, 255));
        jMenuItem1.setText("Deconnexion");
        jMenuItem1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jMenuItem1FocusGained(evt);
            }
        });
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setBackground(java.awt.SystemColor.activeCaption);
        jMenuItem2.setFont(new java.awt.Font("AR CENA", 0, 14)); // NOI18N
        jMenuItem2.setForeground(new java.awt.Color(255, 255, 255));
        jMenuItem2.setText("Quitter");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setBackground(java.awt.SystemColor.activeCaption);
        jMenuItem3.setFont(new java.awt.Font("AR CENA", 0, 14)); // NOI18N
        jMenuItem3.setForeground(new java.awt.Color(255, 255, 255));
        jMenuItem3.setText("Aide");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setForeground(new java.awt.Color(255, 255, 255));
        jMenu2.setText("Edition");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(AppTab, javax.swing.GroupLayout.PREFERRED_SIZE, 897, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(AppTab, javax.swing.GroupLayout.PREFERRED_SIZE, 626, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DesignationFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DesignationFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DesignationFieldActionPerformed

    private void PrixUnitaireFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrixUnitaireFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PrixUnitaireFieldActionPerformed

    private void EnregistrerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnregistrerBtnActionPerformed
      DefaultTableModel model = (DefaultTableModel) AjoutProduitTab.getModel();
      DefaultComboBoxModel combo1 = (DefaultComboBoxModel) CatComboBox.getModel();
      
        try{
          Statement stmt1 = DB.getStatement(); 
             String sql1 = "select * from ventes_db.produit where produit.code_produit = '"+CodeField.getText()+"'";
             ResultSet rs = stmt1.executeQuery(sql1);
                   if(rs.next()){ // on verifie si le produit est absent dans la bd (cas ou il est present)
                       if(PeremField.getText().isEmpty()){
                           String cat = CatComboBox.getSelectedItem().toString(); // recuperation valeur du combo
                         Statement stmt = DB.getStatement();
                         String CAT = "select id from categorie where nom ='" + cat+ "'"; // recuperation de l'id de la valeur
                             try {
                                  ResultSet rscat = stmt.executeQuery(CAT); 
                         if (rscat.next()){
                           int id = rscat.getInt("id");  //resultat de l id
                      String sql2 = "update produit set designation='"+DesignationField.getText()
                                     +"',qte_stock="+Integer.valueOf(QuantiteField.getText())
                                     +",prix="+Double.valueOf(PrixUnitaireField.getText())
                                     +",idcategorie="+id
                                     +" where code_produit ='"+CodeField.getText()+"'";
                      stmt.executeUpdate(sql2);
                      repaint();
                      RemplirTableau();
                      RemplirTableauProduit();
                         }
                    }catch (SQLException exp) {
                      exp.printStackTrace();
                     }
                   }
                             else{
                           String cat = CatComboBox.getSelectedItem().toString(); // recuperation valeur du combo
                         Statement stmt = DB.getStatement();
                         String CAT = "select id from categorie where nom ='" + cat+ "'"; // recuperation de l'id de la valeur
                     try {
                      ResultSet rscat = stmt.executeQuery(CAT); 
                         if (rscat.next()){
                           int id = rscat.getInt("id");  //resultat de l id
                      String sql3 = "update produit set designation='"+DesignationField.getText()
                                     +"',qte_stock="+Integer.valueOf(QuantiteField.getText())
                                     +",prix="+Double.valueOf(PrixUnitaireField.getText())
                                     +",date_peremption='"+Date.valueOf(PeremField.getText())
                                     +",idcategorie="+id+ "' where code_produit ='"+CodeField.getText()+"'";
                      stmt.executeUpdate(sql3);
                      repaint();
                      RemplirTableau();
                      RemplirTableauProduit();
                         }
                    }catch (SQLException exp) {
                      exp.printStackTrace();
                     }
                    }
                   }   
                    else{   //on verifie si le produit est absent dans la bd (cas ou il est absent)
                       if(PeremField.getText().isEmpty()){                   
                           String cat = CatComboBox.getSelectedItem().toString(); // recuperation valeur du combo
                         Statement stmt = DB.getStatement();
                         String CAT = "select id from categorie where nom ='" + cat+ "'"; // recuperation de l'id de la valeur
                      try {   
                         ResultSet rscat = stmt.executeQuery(CAT); 
                         if (rscat.next()){
                           int id = rscat.getInt("id");  //resultat de l id  
                        String sql4 = "insert into produit(code_produit, designation, qte_stock, prix, idcategorie) VALUES ('"+CodeField.getText()
                                      +"','"+DesignationField.getText()
                                      +"',"+Integer.valueOf(QuantiteField.getText())
                                      +","+Double.valueOf(PrixUnitaireField.getText())+","+ id +")";
                         stmt.execute(sql4);
                         model.insertRow(0 , new Object[]{CodeField.getText(),
                                                          DesignationField.getText(),
                                                          QuantiteField.getText(),
                                                          PrixUnitaireField.getText(),"",cat});
                         JOptionPane.showMessageDialog(null, "Code : "+ CodeField.getText() + ", Désignation: " + DesignationField.getText() + ", Quantité : " + QuantiteField.getText() + ", Prix unitaire : " + PrixUnitaireField.getText() + "Francs CFA   "+" Categorie" + cat + " ADDED SUCCESSFULLY TO DATABASE");
                         repaint();
                         }
                        } catch (SQLException exp) {
                            exp.printStackTrace();
                          }
                      }
                       else{
                           String cat = CatComboBox.getSelectedItem().toString(); // recuperation valeur du combo
                         Statement stmt = DB.getStatement();
                         String CAT = "select id from categorie where nom ='" + cat+ "'"; // recuperation de l'id de la valeur
                         try {
                          ResultSet rscat = stmt.executeQuery(CAT); 
                         if (rscat.next()){
                           int id = rscat.getInt("id");  //resultat de l id
                        String sql5 = "insert into produit(code_produit, designation, qte_stock, prix, date_peremption, idcategorie) VALUES ('"+CodeField.getText()
                                      +"','"+DesignationField.getText()
                                      +"',"+Integer.valueOf(QuantiteField.getText())
                                      +","+Double.valueOf(PrixUnitaireField.getText())
                                      +",'"+Date.valueOf(PeremField.getText())
                                      +"',"+ id +")";
                         stmt.execute(sql5);
                         model.insertRow(0 , new Object[]{CodeField.getText(),
                                                          DesignationField.getText(),
                                                          QuantiteField.getText(),
                                                          PrixUnitaireField.getText(),
                                                          PeremField.getText(),
                                                                           cat});
                         JOptionPane.showMessageDialog(null, "Code : "+ CodeField.getText() + "; Désignation: " + DesignationField.getText() + "; Quantité : " + QuantiteField.getText() + "; Prix unitaire : " + PrixUnitaireField.getText() + "Francs CFA  " + "; Date de péremption" + PeremField.getText()+"; categorie= "+ cat+" AJOUTEES AVEC SUCCES A LA BASE DE DONNEES ");
                         repaint();
                           }
                          } catch (SQLException exp) {
                            exp.printStackTrace();
                       }
                               
                   }
                       
                   }
                  }catch (SQLException exp) {
                      exp.printStackTrace();
                     } 
        
     
    }//GEN-LAST:event_EnregistrerBtnActionPerformed

    private void AjoutProduitTabComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_AjoutProduitTabComponentAdded
        // TODO add your handling code here:

    }//GEN-LAST:event_AjoutProduitTabComponentAdded

    private void AjoutProduitTabInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_AjoutProduitTabInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_AjoutProduitTabInputMethodTextChanged

    private void SupprimerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SupprimerBtnActionPerformed
        // On supprime un élément du tableau sélectionné grace à son index 
        DefaultTableModel model = (DefaultTableModel) AjoutProduitTab.getModel();  
         int choice = JOptionPane.showConfirmDialog(null, "Voulez vous vraiment supprimer ce produit?","", JOptionPane.YES_NO_OPTION);
         if(choice == 0){
        try{
           int SelectedrowIndex = AjoutProduitTab.getSelectedRow(); // Get selected row  index
           Statement stmt = DB.getStatement();
           String del =  (String) model.getValueAt(SelectedrowIndex,0);
             String sql = "delete from ventes_db.produit where produit.code_produit = '" +del+"'";
            stmt.execute(sql);
            model.removeRow(SelectedrowIndex);
            repaint();
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null,  " Veuillez sélectionner une ligne à supprimer ");
        }
       }
    }//GEN-LAST:event_SupprimerBtnActionPerformed

    private void AjoutProduitTabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AjoutProduitTabMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) AjoutProduitTab.getModel();
        SimpleDateFormat tdf = new SimpleDateFormat("yyyy MM dd");
        int row = ProduitsTable.rowAtPoint(evt.getPoint());
        int col = ProduitsTable.columnAtPoint(evt.getPoint());
        if (row >=0 && col>=0){
         //  JOptionPane.showMessageDialog(null, "Code : "+ model.getValueAt(row,0) + " Désignation:  " +model.getValueAt(row, 1) + " Quantité : " +model.getValueAt(row, 2)+ " Prix unitaire : " + model.getValueAt(row, 3)+ "Francs CFA "); //ici on affiche les valeurs du tableau cliqué
           CodeField.setText((String) model.getValueAt(row,0));
           DesignationField.setText((String) model.getValueAt(row,1));
           QuantiteField.setText((String) model.getValueAt(row,2));
           PrixUnitaireField.setText((String) model.getValueAt(row,3)); 
       //    PeremField.setText((String)(tdf.format(model.getValueAt(row,4))));
           CodeField.setEditable(false);
        } 
       
    }//GEN-LAST:event_AjoutProduitTabMouseClicked

    private void NouveauBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NouveauBtnActionPerformed
        // TODO add your handling code here:  
           CodeField.setText(null);
           DesignationField.setText(null);
           QuantiteField.setText(null);
           PrixUnitaireField.setText(null);
           PeremField.setText(null);
           CodeField.setEditable(true);
           repaint();
    }//GEN-LAST:event_NouveauBtnActionPerformed

    private void AjoutProduitTabComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_AjoutProduitTabComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_AjoutProduitTabComponentShown

    private void SearchBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBtn2ActionPerformed
        // TODO add your handling code here:
                Recherche2();
    }//GEN-LAST:event_SearchBtn2ActionPerformed

    private void PdAnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PdAnnulerActionPerformed
        // TODO add your handling code here:
     /*   PdQuantite.setText("");
        ProdDialog.setVisible(false); */
    }//GEN-LAST:event_PdAnnulerActionPerformed

    private void PdAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PdAjouterActionPerformed
        // TODO add your handling code here:
      /*  DefaultTableModel Fmodel = (DefaultTableModel) FactureTable.getModel();
        DefaultTableModel Pmodel = (DefaultTableModel) ProduitsTable.getModel();
        Fmodel.addRow(new Object[]{Pmodel.getValueAt(ligneActive,0),
                                   Pmodel.getValueAt(ligneActive,1),
                                   Pmodel.getValueAt(ligneActive,2),
                                   Pmodel.getValueAt(ligneActive,3)
        });
        ProdDialog.setVisible(false); */
    }//GEN-LAST:event_PdAjouterActionPerformed

    private void SearchBar2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchBar2KeyReleased
        // TODO add your handling code here:
        Recherche2();
    }//GEN-LAST:event_SearchBar2KeyReleased

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
                JOptionPane.showMessageDialog(null, "Aurevoir et à la prochaine ✨👌🚗💨!!!");
        LoginFrame Logout = new LoginFrame();
         Logout.setVisible(true);
         this.setVisible(false); 
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "NOT YET AVAILABLE!!!");
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void CatComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CatComboBoxActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_CatComboBoxActionPerformed

    private void jMenuItem1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jMenuItem1FocusGained
        // TODO add your handling code here:
        jMenuItem1.setForeground(Color.white);
    }//GEN-LAST:event_jMenuItem1FocusGained

    private void DateLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DateLabelMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_DateLabelMouseClicked

    private void ImpressionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImpressionBtnActionPerformed
        // TODO add your handling code here:
        try{
       //     model
            MessageFormat header = new MessageFormat("Facture");
            MessageFormat footer = new MessageFormat("Page(0, number, integer)");
            FactureTable.print(JTable.PrintMode.NORMAL, header, footer);
            TotalField.print();
            NpField.print();
        }catch (PrinterException ex){
            Logger.getLogger(VenteFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ImpressionBtnActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) FactureTable.getModel();

        for (int i=0; i<FactureTable.getRowCount(); i++){
            model.removeRow(i);
        }
        TotalField.setText("");
        NpField.setText("");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void NpFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NpFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NpFieldActionPerformed

    private void TotalFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TotalFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TotalFieldActionPerformed

    private void FactureTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FactureTableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) FactureTable.getModel();
        int row = ProduitsTable.rowAtPoint(evt.getPoint());
        int col = ProduitsTable.columnAtPoint(evt.getPoint());
        int selectedrowindex = FactureTable.getSelectedRow();
        if (row >=0 && col>=0){
            int z = 0;
            z = Integer.valueOf(JOptionPane.showInputDialog("Quantité"));
            if (z>0){
                model.setValueAt(z,selectedrowindex,2);
            }
            int net = 0, total =0, tva= 0;
            for (int i=0; i<FactureTable.getRowCount();i++){
                total += (int) model.getValueAt(i,2)* Double.valueOf((String)model.getValueAt(i, 3));
            }
            net += total + tva;
            TotalField.setText(total + " XAF");
            NpField.setText(net + " XAF");
        }
    }//GEN-LAST:event_FactureTableMouseClicked

    private void SearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBtnActionPerformed
        // Actions à effectuer sur le searchbar
        //  JOptionPane.showMessageDialog(null, SearchBar.getText());
        Recherche();
        // Ici les valeurs dun tableau sont dans le TableModel
    }//GEN-LAST:event_SearchBtnActionPerformed

    private void SearchBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchBarActionPerformed

    private void ProduitsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProduitsTableMouseClicked
        // TODO add your handling code here:
                DefaultTableModel model = (DefaultTableModel) ProduitsTable.getModel();
        DefaultTableModel mode = (DefaultTableModel) FactureTable.getModel();
        int row = ProduitsTable.rowAtPoint(evt.getPoint());
        int col = ProduitsTable.columnAtPoint(evt.getPoint());
        if (row >=0 && col>=0){
            // JOptionPane.showMessageDialog(null, "Code : "+ model.getValueAt(row,0) + " Désignation:  " +model.getValueAt(row, 1) + " Quantité : " +model.getValueAt(row, 2)+ " Prix unitaire : " + model.getValueAt(row, 3)+ "Francs CFA "); //ici on affiche les valeurs du tableau cliqué
            int y = 0;
            y = Integer.valueOf(JOptionPane.showInputDialog("Quantité"));
            if (y>0){
                dataFact = new Object[] {
                    model.getValueAt(row, 0),
                    model.getValueAt(row, 1),
                    y,
                    model.getValueAt(row, 3),
                };
                mode.addRow(dataFact);
            }
            else{
                JOptionPane.showMessageDialog(null, "Entrez une valeur valide");
            }
            int net = 0, total =0, tva= 500;
            for (int i=0; i<FactureTable.getRowCount();i++){
                total += (int) mode.getValueAt(i,2)* Double.valueOf((String)mode.getValueAt(i, 3));
            }
            net += total + tva;
            TotalField.setText(total + " XAF");
            NpField.setText(net + " XAF");
        }
    }//GEN-LAST:event_ProduitsTableMouseClicked

    private void jScrollPane2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPane2MouseClicked

    private void SearchBtn2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchBtn2KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchBtn2KeyReleased

    private void SearchBtn2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchBtn2KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchBtn2KeyPressed

    private void SearchBarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchBarKeyReleased
        // TODO add your handling code here:
        Recherche();
    }//GEN-LAST:event_SearchBarKeyReleased

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
       DefaultTableModel model = (DefaultTableModel) FactureTable.getModel();
       model.addRow(new Object []{"TOTAL", null, null, TotalField.getText()});
    }//GEN-LAST:event_jButton2ActionPerformed

    private void SearchBar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBar2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchBar2ActionPerformed
  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
                try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(vente2Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(vente2Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(vente2Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(vente2Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() { 
            public void run() {

                    new VenteFrame().setVisible(true);

                }
        });
    }  
    
             public void RemplirTableau(){
            DefaultTableModel model = (DefaultTableModel) AjoutProduitTab.getModel();
            DefaultComboBoxModel combo = (DefaultComboBoxModel) CatComboBox.getModel();
            combo.removeAllElements();
            model.setRowCount(0);
            
            Statement stmt = DB.getStatement();
             String sql = "select produit.code_produit, produit.designation, produit.prix, produit.qte_stock, produit.date_peremption, categorie.nom from produit,categorie where produit.idcategorie= categorie.id";
            try{
            ResultSet rs1 = stmt.executeQuery(sql);
            while (rs1.next()){
                String code = rs1.getString("code_produit");
                String designation = rs1.getString("designation");
                Double prix = rs1.getDouble("prix");
                int qte = rs1.getInt("qte_stock");
                Date date = rs1.getDate("date_peremption"); 
                String nom = rs1.getString("nom");
             model.addRow( new Object[]{code,designation,String.valueOf(qte),String.valueOf(prix),String.valueOf(date), nom});
            repaint();
            }
            }catch (Exception exp){
                exp.printStackTrace();
              }
              try{
            String sql1 = "select nom from categorie";
            ResultSet rs1 = stmt.executeQuery(sql1);
              while (rs1.next()){
                  String nom = rs1.getString("nom");
                  combo.addElement(nom);
              }
              }catch (Exception exp){
                exp.printStackTrace();
              }

          }
        // Ecriture du code pour afficher les données de la bd dans un jtable
             
                          public void RemplirTableauProduit(){
            DefaultTableModel model = (DefaultTableModel) ProduitsTable.getModel();
            model.setRowCount(0);
            Statement stmt = DB.getStatement();
                     String sql = "select * from produit order by id_produit";
            try{
            ResultSet rs1 = stmt.executeQuery(sql);
            while (rs1.next()){
                String code = rs1.getString("code_produit");
                String designation = rs1.getString("designation");
                Double prix = rs1.getDouble("prix");
                int qte = rs1.getInt("qte_stock");
                Date date = rs1.getDate("date_peremption"); 
             model.addRow( new Object[]{code,designation,String.valueOf(qte),String.valueOf(prix),date});
            repaint();
            }
            }catch (Exception exp){
                exp.printStackTrace();
              }
          }
             
              public void Recherche(){
            DefaultTableModel model = (DefaultTableModel) ProduitsTable.getModel();
             model.setRowCount(0);
            Statement stmt = DB.getStatement();
            String sql = "select * from  produit  where designation like '%" +SearchBar.getText()+"%' order by id_produit";
            try{
            ResultSet rs = stmt.executeQuery(sql);
             while (rs.next()){
                String code = rs.getString("code_produit");
                String designation = rs.getString("designation");
                double prix = rs.getDouble("prix");
                int qte = rs.getInt("qte_stock");
                Date date = rs.getDate("date_peremption");
                model.addRow( new Object[]{code,designation,String.valueOf(qte),String.valueOf(prix),date}); 
             }
                           repaint();
            }catch (Exception exp){
                exp.printStackTrace();
              }
          }            

              public void Recherche2(){
                       DefaultTableModel model = (DefaultTableModel) AjoutProduitTab.getModel();
                        model.setRowCount(0);
            Statement stmt = DB.getStatement();
            String sql = "select produit.code_produit, produit.designation, produit.prix, produit.qte_stock, produit.date_peremption, categorie.nom from produit,categorie where produit.idcategorie = categorie.id and  produit.designation like '%" +SearchBar2.getText()+"%' "; //union select produit.code_produit, produit.designation, produit.prix, produit.qte_stock, produit.date_peremption, categorie.nom from produit,categorie where produit.designation like '%" +SearchBar2.getText()+"%' ";
            try{
            ResultSet rs = stmt.executeQuery(sql);
             while (rs.next()){
                String code = rs.getString("code_produit");
                String designation = rs.getString("designation");
                Double prix = rs.getDouble("prix");
                int qte = rs.getInt("qte_stock");
                Date date = rs.getDate("date_peremption");
                String nom = rs.getString("nom");
                model.addRow( new Object[]{code,designation,String.valueOf(qte),String.valueOf(prix),String.valueOf(date),nom}); 
             }
             repaint();
            }catch (Exception exp){
                exp.printStackTrace();
              }
           
          }
              

              
              Thread clock;
              
    
    private Object[] dataFact;
    private Object[] dataFact1;
    private int ligneActive = -1;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable AjoutProduitTab;
    private javax.swing.JTabbedPane AppTab;
    private javax.swing.JComboBox CatComboBox;
    private javax.swing.JPanel ChoixProduitTabVente;
    private javax.swing.JTextField CodeField;
    private javax.swing.JLabel DateLabel;
    private javax.swing.JTextField DesignationField;
    private javax.swing.JButton EnregistrerBtn;
    private javax.swing.JLabel FactureName;
    private javax.swing.JScrollPane FactureScroll;
    private javax.swing.JTable FactureTable;
    private javax.swing.JButton ImpressionBtn;
    private javax.swing.JButton NouveauBtn;
    private javax.swing.JTextField NpField;
    private javax.swing.JLabel NpLabel;
    private javax.swing.JButton PdAjouter;
    private javax.swing.JButton PdAnnuler;
    private javax.swing.JTextField PdQuantite;
    private javax.swing.JTextField PeremField;
    private javax.swing.JTextField PrixUnitaireField;
    private javax.swing.JDialog ProdDialog;
    private javax.swing.JPanel ProduitsTab;
    private javax.swing.JTable ProduitsTable;
    private javax.swing.JTextField QuantiteField;
    private javax.swing.JLabel QuantiteLabl;
    private javax.swing.JTextField SearchBar;
    private javax.swing.JTextField SearchBar2;
    private javax.swing.JButton SearchBtn;
    private javax.swing.JButton SearchBtn2;
    private javax.swing.JButton SupprimerBtn;
    private javax.swing.JTextField TotalField;
    private javax.swing.JLabel TotalLabel;
    private javax.swing.JPanel VentesTab;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables

}
